@page
@model CinemaBooking.Pages.Customer.Account.ForgotPassword
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Pages/Shared/_UserLayout.cshtml";
}

<style>
    /* Login page form styling */
  
    /* Banner styling */
    .banner {
        position: relative;
        height: 520px;
        overflow: hidden;
        border-radius: 15px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
    }

    .banner img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease-in-out;
    }

        .banner img:hover {
            transform: scale(1.05);
        }

    .banner-controls {
        position: absolute;
        top: 50%;
        left: 0;
        right: 0;
        transform: translateY(-50%);
        display: flex;
        justify-content: space-between;
        padding: 0 20px;
    }

        .banner-controls button {
            background-color: rgba(0, 0, 0, 0.5);
            color: #ffffff;
            border: none;
            padding: 10px;
            border-radius: 50%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .banner-controls button:hover {
                background-color: rgba(0, 0, 0, 0.7);
            }

    /* Form container styling */
    .form-container {
        max-width: 600px;
        margin: 0 auto;
        background-color: #ffffff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

        .form-container h3 {
            margin-bottom: 20px;
            color: #333;
            font-weight: 600;
        }

    .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
        display: block;
    }

    .form-control {
        border-radius: 5px;
        padding: 10px 15px;
        border: 1px solid #ced4da;
        transition: border-color 0.3s, box-shadow 0.3s;
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
        }

    .form-container {
        max-width: 500px;
        margin: 0 auto;
        background-color: #ffffff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .form-container h3 {
            margin-bottom: 20px;
            color: #333;
            font-weight: 600;
        }

    .form-control {
        border-radius: 5px;
        padding: 10px 40px 10px 45px;
        border: 1px solid #ced4da;
        transition: border-color 0.3s, box-shadow 0.3s;
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
        }

    .input-icon {
        position: relative;
    }

        .input-icon i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }

    .text-danger {
        font-size: 0.875em;
        margin-top: 5px;
        display: block;
        color: #dc3545;
    }

    a.text-decoration-none {
        color: #007bff;
    }

        a.text-decoration-none:hover {
            text-decoration: underline;
        }

    /* Button styling */
    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 12px 20px;
        font-weight: 600;
        border-radius: 5px;
        font-size: 1rem;
        transition: background-color 0.3s, box-shadow 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .btn-primary:active {
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
</style>

<main class="container my-4">
    <div class="banner mb-4">
        <img id="bannerImage" src="~/asserts/images/banner1.jpg" alt="Banner">
        <div class="banner-controls d-flex justify-content-between px-3">
            <button id="prevBtn" class="btn btn-light">&lt;</button>
            <button id="nextBtn" class="btn btn-light">&gt;</button>
        </div>
    </div>

    <div class="form-container">
        <form method="post">
            <h3>Forgot Password</h3>
            <div class="mb-3 input-icon">
                <i class="fa fa-user"></i>
                <input type="email" id="Email" name="Email" class="form-control" placeholder="Email" required>
                
            </div>
            @if (TempData["SuccessMessage"] != null)
            {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            <!-- Sử dụng d-flex và justify-content-between để căn chỉnh -->
            <div class="d-flex justify-content-between">
                <a href="/Customer/Account/Login" style="height: 40px" class="btn btn-secondary ">Back To Login</a>
                <button type="submit" class="btn btn-primary" style="height: 40px">Send To Email</button>
            </div>
        </form>
    </div>

</main>

<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const bannerImages = [
        '@Url.Content("~/asserts/images/banner11.jpg")',
        '@Url.Content("~/asserts/images/banner1.jpg")',
        '@Url.Content("~/asserts/images/banner1.jpg")'
    ];
    let currentImageIndex = 0;
    const bannerImage = document.getElementById('bannerImage');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');

    function updateBannerImage() {
        bannerImage.src = bannerImages[currentImageIndex];
    }

    prevBtn.addEventListener('click', () => {
        currentImageIndex = (currentImageIndex === 0) ? bannerImages.length - 1 : currentImageIndex - 1;
        updateBannerImage();
    });

    nextBtn.addEventListener('click', () => {
        currentImageIndex = (currentImageIndex === bannerImages.length - 1) ? 0 : currentImageIndex + 1;
        updateBannerImage();
    });
</script>

